DESIGN DOCUMENT
--------------------------------------------

HardDrive class

String size - size of hard drive
String name - name of hard drive

public Hardrive (String n, String s)
Initializes instance variables name and size to n and s respectively

public String getSize ()
returns size of hard drive

public String getName()
returns name of hard drive

public void printAll ()
prints information of the hard drive


--------------------------------------------
SUPER CLASS

LVM class

String name - the name of the object
String u - the UUID of the object

public LVM (String n, String u)
Initializes instance variable name and this.u to n and u respectively

public String getU ()
returns UUID of object

public String getName()
returns name of object

--------------------------------------------
SUBCLASS

public class PhysicalVolume extends LVM

HardDrive h - the hard drive associated with this PV

public PhysicalVolume (String n, String u, HardDrive h)
super(n ,u);
this.h = h;
Initializes instance variables from super class: name and this.u, to n and u respectively. Then initializes teh hard drive this.h to h.


    public HardDrive getH()
    returns the hard drive

    public String getSize ()
    returns the size of the hard drive

    public void printAll (VolumeGroups v)
        prints information relating to the PV if it is associated with a VG

    public void printAll()
        prints information relating to the PV if it is not associated with a VG

--------------------------------------------
SUBCLASS
public class VolumeGroups extends LVM

 PhysicalVolume PVn - physical volume object

private ArrayList<PhysicalVolume> pVs - list of physical volumes
private ArrayList<LogicalVolume> lVs - list of logical volumes

 public VolumeGroups (String n, String u, PhysicalVolume PVs)
        super(n,u);
        pVs.add(PVs);
Initializes instance variables from super class: name and this.u, to n and u respectively. Adds PhysicalVolume object PVs to pVs list.

public ArrayList<PhysicalVolume> getpVs ()
returns the pVs list

public ArrayList<LogicalVolume> getLVs ()
returns the lVs list

  public PhysicalVolume getPVn ()
  returns the physical volume object

  public void printpVs()
  prints the physical volumes associated with this volume group and prints the UUID

  public void addtoLVs (LogicalVolume lv)
  adds a LogicalVolume object to the lVs list

  public int freeSpace ()
  calculates the free space available in this VG

  public void printAll ()
  prints out all the information of this VG, calls the printpVs() method too
--------------------------------------------

public class LogicalVolume extends LVM

String size - size of the LV
VolumeGroups v - the VG associated with this LV

public LogicalVolume(String n, String u, String s, VolumeGroups v)
        super(n,u);
        size = s;
        this.v = v;
Initializes instance variables from super class: name and this.u, to n and u respectively. Initializes the size of the lv to s and the VG to v.

    public String getSize()
     returns teh size of the LV

    public int getSizeint()
    returns the size of the LV as an integer since teh size is initially a string

    public String getV ()
    returns the name of the VG

    public void printAll ()
    prints all the information of the LV
 --------------------------------------------
 public class UUIDGenerator
 String u - the variable that will hold the value of the UUID

 public UUIDGenerator()
 Initializes u to a generators UUID

 public String getUUID()
 returns the string u aka UUID
--------------------------------------------






















